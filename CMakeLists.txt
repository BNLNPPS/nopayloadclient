cmake_minimum_required(VERSION 3.20)

project(nopayloadclient VERSION 0.0.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Set a debug postfix
set(CMAKE_DEBUG_POSTFIX "-dbg")

# Set installation destinations typical for *nix systems
include(GNUInstallDirs)

set(NOPAYLOADCLIENT_INCLUDE_INSTALL_DIR        "${CMAKE_INSTALL_INCLUDEDIR}")
set(NOPAYLOADCLIENT_RUNTIME_INSTALL_DIR        "${CMAKE_INSTALL_BINDIR}")
set(NOPAYLOADCLIENT_LIBRARY_INSTALL_DIR        "${CMAKE_INSTALL_LIBDIR}")
set(NOPAYLOADCLIENT_ARCHIVE_INSTALL_DIR        "${CMAKE_INSTALL_LIBDIR}")
set(NOPAYLOADCLIENT_FRAMEWORK_INSTALL_DIR      "${CMAKE_INSTALL_LIBDIR}")
set(NOPAYLOADCLIENT_DATA_INSTALL_DIR           "${CMAKE_INSTALL_DATADIR}/${PROJECT_NAME}")
set(NOPAYLOADCLIENT_DATA_INSTALL_DIR_FULL      "${CMAKE_INSTALL_FULL_DATADIR}/${PROJECT_NAME}")
set(NOPAYLOADCLIENT_CMAKE_CONFIG_INSTALL_DIR   "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")
set(NOPAYLOADCLIENT_CMAKE_CONFIG_DIR           "${CMAKE_CURRENT_BINARY_DIR}")
set(NOPAYLOADCLIENT_CMAKE_VERSION_CONFIG_FILE  "${NOPAYLOADCLIENT_CMAKE_CONFIG_DIR}/${PROJECT_NAME}ConfigVersion.cmake")
set(NOPAYLOADCLIENT_CMAKE_PROJECT_CONFIG_FILE  "${NOPAYLOADCLIENT_CMAKE_CONFIG_DIR}/${PROJECT_NAME}Config.cmake")

# Set up external dependencies
find_package(CURL REQUIRED)

add_subdirectory(src)
#add_subdirectory(examples)

# Install files and export configs
include(CMakePackageConfigHelpers)

# Create and install version file
write_basic_package_version_file(${NOPAYLOADCLIENT_CMAKE_VERSION_CONFIG_FILE}
    VERSION ${PROJECT_VERSION}
    COMPATIBILITY AnyNewerVersion
)

install(
    FILES ${NOPAYLOADCLIENT_CMAKE_PROJECT_CONFIG_FILE} ${NOPAYLOADCLIENT_CMAKE_VERSION_CONFIG_FILE}
    DESTINATION ${NOPAYLOADCLIENT_CMAKE_CONFIG_INSTALL_DIR}
)

install(
    EXPORT nopayloadclientTargets
    NAMESPACE ${PROJECT_NAME}::
    DESTINATION ${NOPAYLOADCLIENT_CMAKE_CONFIG_INSTALL_DIR}
)

install(
    DIRECTORY "${CMAKE_SOURCE_DIR}/config"
    DESTINATION ${NOPAYLOADCLIENT_DATA_INSTALL_DIR}
)


# Set up tests
include(CTest)

if(BUILD_TESTING)
    enable_testing()
    add_subdirectory(tests)
endif()
